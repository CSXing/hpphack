#include <map>
#include <string>

#include "..\..\..\ValveSDK\misc\vfunc.hpp"
#include "..\..\..\ValveSDK\interfaces\IInputSystem.hpp"

std::map<std::string, ButtonCode_t> g_keynames_map =
{
	{"0", KEY_0},
	{"1", KEY_1},
	{"2", KEY_2},
	{"3", KEY_3},
	{"4", KEY_4},
	{"5", KEY_5},
	{"6", KEY_6},
	{"7", KEY_7},
	{"8", KEY_8},
	{"9", KEY_9},
	{"A", KEY_A},
	{"B", KEY_B},
	{"C", KEY_C},
	{"D", KEY_D},
	{"E", KEY_E},
	{"F", KEY_F},
	{"G", KEY_G},
	{"H", KEY_H},
	{"I", KEY_I},
	{"J", KEY_J},
	{"K", KEY_K},
	{"L", KEY_L},
	{"M", KEY_M},
	{"N", KEY_N},
	{"O", KEY_O},
	{"P", KEY_P},
	{"Q", KEY_Q},
	{"R", KEY_R},
	{"S", KEY_S},
	{"T", KEY_T},
	{"U", KEY_U},
	{"V", KEY_V},
	{"W", KEY_W},
	{"X", KEY_X},
	{"Y", KEY_Y},
	{"Z", KEY_Z},
	{"NUMPAD 0", KEY_PAD_0},
	{"NUMPAD 1", KEY_PAD_1},
	{"NUMPAD 2", KEY_PAD_2},
	{"NUMPAD 3", KEY_PAD_3},
	{"NUMPAD 4", KEY_PAD_4},
	{"NUMPAD 5", KEY_PAD_5},
	{"NUMPAD 6", KEY_PAD_6},
	{"NUMPAD 7", KEY_PAD_7},
	{"NUMPAD 8", KEY_PAD_8},
	{"NUMPAD 9", KEY_PAD_9},
	{"NUMPAD /", KEY_PAD_DIVIDE},
	{"NUMPAD *", KEY_PAD_MULTIPLY},
	{"NUMPAD -", KEY_PAD_MINUS},
	{"NUMPAD +", KEY_PAD_PLUS},
	{"NUMPAD ENTER", KEY_PAD_ENTER},
	{"NUMPAD .", KEY_PAD_DECIMAL},
	{"[", KEY_LBRACKET},
	{"]", KEY_RBRACKET},
	{";", KEY_SEMICOLON},
	{"\'", KEY_APOSTROPHE},
	{"\"", KEY_BACKQUOTE},
	{",", KEY_COMMA},
	{".", KEY_PERIOD},
	{"/", KEY_SLASH},
	{"\\", KEY_BACKSLASH},
	{"-", KEY_MINUS},
	{"=", KEY_EQUAL},
	{"ENTER", KEY_ENTER},
	{"SPACE", KEY_SPACE},
	{"BACKSPACE", KEY_BACKSPACE},
	{"TAB", KEY_TAB},
	{"CAPSLOCK", KEY_CAPSLOCK},
	{"NUMLOCK", KEY_NUMLOCK},
	{"ESCAPE", KEY_ESCAPE},
	{"SCROLLOCK", KEY_SCROLLLOCK},
	{"INSERT", KEY_INSERT},
	{"DELETE", KEY_DELETE},
	{"HOME", KEY_HOME},
	{"END", KEY_END},
	{"PAGEUP", KEY_PAGEUP},
	{"PAGEDOWN", KEY_PAGEDOWN},
	{"BREAK", KEY_BREAK},
	{"SHIFT", KEY_LSHIFT},
	{"SHIFT", KEY_RSHIFT},
	{"ALT", KEY_LALT},
	{"ALT", KEY_RALT},
	{"CTRL", KEY_LCONTROL},
	{"CTRL", KEY_RCONTROL},
	{"WIN", KEY_LWIN},
	{"WIN", KEY_RWIN},
	{"APP", KEY_APP},
	{"UP", KEY_UP},
	{"LEFT", KEY_LEFT},
	{"DOWN", KEY_DOWN},
	{"RIGHT", KEY_RIGHT},
	{"F1", KEY_F1},
	{"F2", KEY_F2},
	{"F3", KEY_F3},
	{"F4", KEY_F4},
	{"F5", KEY_F5},
	{"F6", KEY_F6},
	{"F7", KEY_F7},
	{"F8", KEY_F8},
	{"F9", KEY_F9},
	{"F10", KEY_F10},
	{"F11", KEY_F11},
	{"F12", KEY_F12},
	{"CAPSLOCKTOGGLE", KEY_CAPSLOCKTOGGLE},
	{"NUMLOCKTOGGLE", KEY_NUMLOCKTOGGLE},
	{"SCROLLLOCKTOGGLE", KEY_SCROLLLOCKTOGGLE},
	{"MOUSE1", MOUSE_LEFT},
	{"MOUSE2", MOUSE_RIGHT},
	{"MOUSE3", MOUSE_MIDDLE},
	{"MOUSE4", MOUSE_4},
	{"MOUSE5", MOUSE_5},
	{"MOUSEWHEELUP", MOUSE_WHEEL_UP},
	{"MOUSEWHEELDOWN", MOUSE_WHEEL_DOWN},
};

static std::string GetKeyName(int keynum)
{
	if (keynum)
	{
		if (keynum == BUTTON_CODE_INVALID)
			return "<KEY CODE INVALID>";

		for (auto& keyname : g_keynames_map)
		{
			if (keyname.second == keynum)
				return keyname.first.c_str();
		}
	}

	return "<KEY NONE>";
}